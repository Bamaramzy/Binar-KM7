/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const ManufacturesLazyImport = createFileRoute('/manufactures')()
const LoginLazyImport = createFileRoute('/login')()
const CarsLazyImport = createFileRoute('/cars')()
const IndexLazyImport = createFileRoute('/')()
const CarsCreateManufacturesLazyImport = createFileRoute(
  '/cars/createManufactures',
)()
const CarsCreateLazyImport = createFileRoute('/cars/create')()
const CarsIdLazyImport = createFileRoute('/cars/$id')()
const CarsManufacturesIdLazyImport = createFileRoute('/cars/manufactures/$id')()
const CarsEditIdLazyImport = createFileRoute('/cars/edit/$id')()
const CarsEditManufacturesIdLazyImport = createFileRoute(
  '/cars/edit/manufactures/$id',
)()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const ManufacturesLazyRoute = ManufacturesLazyImport.update({
  id: '/manufactures',
  path: '/manufactures',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/manufactures.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const CarsLazyRoute = CarsLazyImport.update({
  id: '/cars',
  path: '/cars',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cars.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CarsCreateManufacturesLazyRoute = CarsCreateManufacturesLazyImport.update(
  {
    id: '/createManufactures',
    path: '/createManufactures',
    getParentRoute: () => CarsLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/cars/createManufactures.lazy').then((d) => d.Route),
)

const CarsCreateLazyRoute = CarsCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => CarsLazyRoute,
} as any).lazy(() => import('./routes/cars/create.lazy').then((d) => d.Route))

const CarsIdLazyRoute = CarsIdLazyImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CarsLazyRoute,
} as any).lazy(() => import('./routes/cars/$id.lazy').then((d) => d.Route))

const CarsManufacturesIdLazyRoute = CarsManufacturesIdLazyImport.update({
  id: '/manufactures/$id',
  path: '/manufactures/$id',
  getParentRoute: () => CarsLazyRoute,
} as any).lazy(() =>
  import('./routes/cars/manufactures.$id.lazy').then((d) => d.Route),
)

const CarsEditIdLazyRoute = CarsEditIdLazyImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => CarsLazyRoute,
} as any).lazy(() => import('./routes/cars/edit/$id.lazy').then((d) => d.Route))

const CarsEditManufacturesIdLazyRoute = CarsEditManufacturesIdLazyImport.update(
  {
    id: '/edit/manufactures/$id',
    path: '/edit/manufactures/$id',
    getParentRoute: () => CarsLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/cars/edit/manufactures.$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cars': {
      id: '/cars'
      path: '/cars'
      fullPath: '/cars'
      preLoaderRoute: typeof CarsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/manufactures': {
      id: '/manufactures'
      path: '/manufactures'
      fullPath: '/manufactures'
      preLoaderRoute: typeof ManufacturesLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/cars/$id': {
      id: '/cars/$id'
      path: '/$id'
      fullPath: '/cars/$id'
      preLoaderRoute: typeof CarsIdLazyImport
      parentRoute: typeof CarsLazyImport
    }
    '/cars/create': {
      id: '/cars/create'
      path: '/create'
      fullPath: '/cars/create'
      preLoaderRoute: typeof CarsCreateLazyImport
      parentRoute: typeof CarsLazyImport
    }
    '/cars/createManufactures': {
      id: '/cars/createManufactures'
      path: '/createManufactures'
      fullPath: '/cars/createManufactures'
      preLoaderRoute: typeof CarsCreateManufacturesLazyImport
      parentRoute: typeof CarsLazyImport
    }
    '/cars/edit/$id': {
      id: '/cars/edit/$id'
      path: '/edit/$id'
      fullPath: '/cars/edit/$id'
      preLoaderRoute: typeof CarsEditIdLazyImport
      parentRoute: typeof CarsLazyImport
    }
    '/cars/manufactures/$id': {
      id: '/cars/manufactures/$id'
      path: '/manufactures/$id'
      fullPath: '/cars/manufactures/$id'
      preLoaderRoute: typeof CarsManufacturesIdLazyImport
      parentRoute: typeof CarsLazyImport
    }
    '/cars/edit/manufactures/$id': {
      id: '/cars/edit/manufactures/$id'
      path: '/edit/manufactures/$id'
      fullPath: '/cars/edit/manufactures/$id'
      preLoaderRoute: typeof CarsEditManufacturesIdLazyImport
      parentRoute: typeof CarsLazyImport
    }
  }
}

// Create and export the route tree

interface CarsLazyRouteChildren {
  CarsIdLazyRoute: typeof CarsIdLazyRoute
  CarsCreateLazyRoute: typeof CarsCreateLazyRoute
  CarsCreateManufacturesLazyRoute: typeof CarsCreateManufacturesLazyRoute
  CarsEditIdLazyRoute: typeof CarsEditIdLazyRoute
  CarsManufacturesIdLazyRoute: typeof CarsManufacturesIdLazyRoute
  CarsEditManufacturesIdLazyRoute: typeof CarsEditManufacturesIdLazyRoute
}

const CarsLazyRouteChildren: CarsLazyRouteChildren = {
  CarsIdLazyRoute: CarsIdLazyRoute,
  CarsCreateLazyRoute: CarsCreateLazyRoute,
  CarsCreateManufacturesLazyRoute: CarsCreateManufacturesLazyRoute,
  CarsEditIdLazyRoute: CarsEditIdLazyRoute,
  CarsManufacturesIdLazyRoute: CarsManufacturesIdLazyRoute,
  CarsEditManufacturesIdLazyRoute: CarsEditManufacturesIdLazyRoute,
}

const CarsLazyRouteWithChildren = CarsLazyRoute._addFileChildren(
  CarsLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/cars': typeof CarsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/manufactures': typeof ManufacturesLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/cars/$id': typeof CarsIdLazyRoute
  '/cars/create': typeof CarsCreateLazyRoute
  '/cars/createManufactures': typeof CarsCreateManufacturesLazyRoute
  '/cars/edit/$id': typeof CarsEditIdLazyRoute
  '/cars/manufactures/$id': typeof CarsManufacturesIdLazyRoute
  '/cars/edit/manufactures/$id': typeof CarsEditManufacturesIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/cars': typeof CarsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/manufactures': typeof ManufacturesLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/cars/$id': typeof CarsIdLazyRoute
  '/cars/create': typeof CarsCreateLazyRoute
  '/cars/createManufactures': typeof CarsCreateManufacturesLazyRoute
  '/cars/edit/$id': typeof CarsEditIdLazyRoute
  '/cars/manufactures/$id': typeof CarsManufacturesIdLazyRoute
  '/cars/edit/manufactures/$id': typeof CarsEditManufacturesIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/cars': typeof CarsLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/manufactures': typeof ManufacturesLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/cars/$id': typeof CarsIdLazyRoute
  '/cars/create': typeof CarsCreateLazyRoute
  '/cars/createManufactures': typeof CarsCreateManufacturesLazyRoute
  '/cars/edit/$id': typeof CarsEditIdLazyRoute
  '/cars/manufactures/$id': typeof CarsManufacturesIdLazyRoute
  '/cars/edit/manufactures/$id': typeof CarsEditManufacturesIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cars'
    | '/login'
    | '/manufactures'
    | '/profile'
    | '/register'
    | '/cars/$id'
    | '/cars/create'
    | '/cars/createManufactures'
    | '/cars/edit/$id'
    | '/cars/manufactures/$id'
    | '/cars/edit/manufactures/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cars'
    | '/login'
    | '/manufactures'
    | '/profile'
    | '/register'
    | '/cars/$id'
    | '/cars/create'
    | '/cars/createManufactures'
    | '/cars/edit/$id'
    | '/cars/manufactures/$id'
    | '/cars/edit/manufactures/$id'
  id:
    | '__root__'
    | '/'
    | '/cars'
    | '/login'
    | '/manufactures'
    | '/profile'
    | '/register'
    | '/cars/$id'
    | '/cars/create'
    | '/cars/createManufactures'
    | '/cars/edit/$id'
    | '/cars/manufactures/$id'
    | '/cars/edit/manufactures/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CarsLazyRoute: typeof CarsLazyRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  ManufacturesLazyRoute: typeof ManufacturesLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CarsLazyRoute: CarsLazyRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  ManufacturesLazyRoute: ManufacturesLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/cars",
        "/login",
        "/manufactures",
        "/profile",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/cars": {
      "filePath": "cars.lazy.jsx",
      "children": [
        "/cars/$id",
        "/cars/create",
        "/cars/createManufactures",
        "/cars/edit/$id",
        "/cars/manufactures/$id",
        "/cars/edit/manufactures/$id"
      ]
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/manufactures": {
      "filePath": "manufactures.lazy.jsx"
    },
    "/profile": {
      "filePath": "profile.lazy.jsx"
    },
    "/register": {
      "filePath": "register.lazy.jsx"
    },
    "/cars/$id": {
      "filePath": "cars/$id.lazy.jsx",
      "parent": "/cars"
    },
    "/cars/create": {
      "filePath": "cars/create.lazy.jsx",
      "parent": "/cars"
    },
    "/cars/createManufactures": {
      "filePath": "cars/createManufactures.lazy.jsx",
      "parent": "/cars"
    },
    "/cars/edit/$id": {
      "filePath": "cars/edit/$id.lazy.jsx",
      "parent": "/cars"
    },
    "/cars/manufactures/$id": {
      "filePath": "cars/manufactures.$id.lazy.jsx",
      "parent": "/cars"
    },
    "/cars/edit/manufactures/$id": {
      "filePath": "cars/edit/manufactures.$id.lazy.jsx",
      "parent": "/cars"
    }
  }
}
ROUTE_MANIFEST_END */
